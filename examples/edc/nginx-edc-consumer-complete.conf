# Complete nginx configuration for EDC Consumer Connector
# File: /etc/nginx/sites-available/edc-consumer
# Domain: consumer.connector-dev.startinblox.com
# EDC Instance: stbx-consumer on 51.158.102.51

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name consumer.connector-dev.startinblox.com;
    
    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
    
    # Redirect all other HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    server_name consumer.connector-dev.startinblox.com;

    # SSL Configuration (Let's Encrypt paths)
    ssl_certificate /etc/letsencrypt/live/consumer.connector-dev.startinblox.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/consumer.connector-dev.startinblox.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    
    # CORS headers for web clients (sib-core demo)
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Api-Key, Accept, Origin, User-Agent, Cache-Control" always;
    add_header Access-Control-Max-Age 86400 always;

    # Handle preflight OPTIONS requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Logging
    access_log /var/log/nginx/edc-consumer.access.log;
    error_log /var/log/nginx/edc-consumer.error.log;

    # Root redirect to management API
    location / {
        return 301 https://$server_name/management/;
    }

    # Management API v3 (Primary - for sib-core integration)
    # Maps to EDC port 29193
    location /management/ {
        proxy_pass http://127.0.0.1:29193/management/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Pass through authentication headers
        proxy_pass_header Authorization;
        proxy_pass_header X-Api-Key;
        
        # Timeouts for EDC operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings for large responses
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Handle WebSocket upgrades (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Protocol API (Dataspace Protocol communication)
    # Maps to EDC port 29194
    location /protocol/ {
        proxy_pass http://127.0.0.1:29194/protocol/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Protocol API needs to handle larger payloads
        client_max_body_size 10M;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Public API (for data plane access)
    # Maps to EDC port 29291
    location /public/ {
        proxy_pass http://127.0.0.1:29291/public/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Public API may handle file transfers
        client_max_body_size 100M;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;  # Longer for file transfers
        proxy_read_timeout 300s;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Main API (general EDC API)
    # Maps to EDC port 29191
    location /api/ {
        proxy_pass http://127.0.0.1:29191/api/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Control API (internal control operations)
    # Maps to EDC port 29192
    location /control/ {
        proxy_pass http://127.0.0.1:29192/control/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Control API - internal operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint (custom endpoint for monitoring)
    location /health {
        proxy_pass http://127.0.0.1:29291/public/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Return simple health status
        access_log off;
    }

    # Optional: Direct access to specific v3 Management API endpoints
    # This allows shorter URLs for common operations
    location /v3/ {
        proxy_pass http://127.0.0.1:29193/management/v3/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        proxy_pass_header Authorization;
        proxy_pass_header X-Api-Key;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# WebSocket upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}